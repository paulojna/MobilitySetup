[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
network = mobilitysetup.simulations.highway.highway_network

##########################################################
#            Simulation parameters                       #
##########################################################
num-rngs = 3

sim-time-limit = 180s

############### Statistics ##################
seed-set = ${repetition}

repeat = 25

**.mecHost*.**.vector-recording = true
**.car[*].app[*].**.vector-recording = true
**.vector-recording = false
**.scalar-recording = false

output-scalar-file = ${resultdir}/${configname}/${configname}-${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${configname}-${repetition}.vec

**.routingRecorder.enabled = false

*.playgroundSizeX = 1000m
*.playgroundSizeY = 200m
*.playgroundSizeZ = 50m

warmup-period = 20s


##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost"
*.veinsManager.moduleType = "simu5g.nodes.cars.NRCar"
*.veinsManager.moduleName = "car"
*.veinsManager.launchConfig = xmldoc("highway.launchd.xml")
*.veinsManager.updateInterval = 0.5s

##########################################################
#                      Mobility                          #
##########################################################
*.car[*].mobility.typename = "VeinsInetMobility"

##########################################################
#              General PHY/NR parameters                  #
##########################################################


# Number of Resource Blocks
**.numBands = 25 

# Transmission Power
**.ueTxPower = 26
**.eNodeBTxPower = 46

**.gnb*.cellInfo.broadcastMessageInterval = 1s
**.fbPeriod = 40   # reports CQI every 40ms
**.amcType = "NRAmc"
**.pilotMode = "ROBUST_CQI" 

**.targetBler = 0.01
**.blerShift = 5

##########################################################
#                      IPv4 Conf                         #
##########################################################
*.configurator.config = xmldoc("./highway.xml")

#######################################################
#        CA and channel model configuration           # 
#######################################################
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numerologyIndex = ${u=0}
*.carrierAggregation.componentCarrier[0].carrierFrequency = 2GHz
*.carrierAggregation.componentCarrier[0].numBands = ${numRbs=50}

*.gnb*.cellularNic.phy.enableHandover = true
*.gnb*.cellularNic.phy.handoverLatency = 50ms

**.gnb*.cellularNic.numCarriers = 1
**.gnb*.cellularNic.channelModel[0].componentCarrierIndex = 0
*.car[*].cellularNic.numCarriers = 1
*.car[*].cellularNic.nrChannelModel[0].componentCarrierIndex = 0


############### X2 configuration #################
*.gnb*.numX2Apps = 1                                        # one x2App per peering node
*.gnb*.x2App[*].server.localPort = 5000 + ancestorIndex(1)  # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
*.gnb1.x2App[0].client.connectAddress = "gnb2%x2ppp0"
*.gnb2.x2App[0].client.connectAddress = "gnb1%x2ppp0"


# UEs associates to the best BS at the beginning of the simulation

*.*.cellularNic.LteChannelModelType = "NRChannelModel"
*.car[*].masterId = 0     # ignored if dynamic association is disabled
*.car[*].macCellId = 0    # ignored if dynamic association is disabled
*.car[*].nrMasterId = 1     # ignored if dynamic association is disabled
*.car[*].nrMacCellId = 1    # ignored if dynamic association is disabled


**.dynamicCellAssociation = true
**.enableHandover = true
*.car[*].cellularNic.phy.enableHandover = true

**.gnb1.macCellId = 1
**.gnb1.macNodeId = 1
**.gnb2.macCellId = 2
**.gnb2.macNodeId = 2

############ MEC Configuration ############
**.hasRNISupport = false

# tcp settings
**.tcp.typename = "Tcp"
**.tcp.advertisedWindow = 65535         # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.tcpAlgorithmClass = "TcpReno"    # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
**.tcp.sackSupport = true               # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.nagleEnabled = false
**.tcp.mss = 1452
######################_ME Host Side_#####################
# resources available
**.mecHost*.virtualisationInfrastructure.ipv4.forwarding = true
**.mecHost*.vim.scheduling = "fair"
*.mecHost*.maxMECApps = 2000												#max ME Apps to instantiate
*.mecHost*.maxRam = 32GB													#max KBytes of Ram Space 
*.mecHost*.maxDisk = 100TB												#max KBytes of Ram Space 
*.mecHost*.maxCpuSpeed = 400000									#max percentage of CPU

*.mecHost*.eNBList = "gnb1, gnb2"

*.gnb*.gateway = "upf"

#-------ETCI MEC Services:---------------
*.mecHost*.mecPlatform.numMecServices = 1
*.mecHost*.mecPlatform.mecService[0].typename = "RNIService"
*.mecHost1.mecPlatform.mecService[0].localAddress = "mecHost1.virtualisationInfrastructure"
*.mecHost2.mecPlatform.mecService[0].localAddress = "mecHost2.virtualisationInfrastructure" 
*.mecHost*.mecPlatform.mecService[0].localPort = 10020
*.mecHost1.mecPlatform.serviceRegistry.localAddress = "mecHost1.virtualisationInfrastructure" 
*.mecHost2.mecPlatform.serviceRegistry.localAddress = "mecHost2.virtualisationInfrastructure" 
*.mecHost*.mecPlatform.serviceRegistry.localPort = 10021

#*.mecHost*.mecPlatform.numMecServices = 1
#*.mecHost*.mecPlatform.mecService[0].typename = "LocationService"
#*.mecHost1.mecPlatform.mecService[0].localAddress = "mecHost1.virtualisationInfrastructure" 
#*.mecHost2.mecPlatform.mecService[0].localAddress = "mecHost2.virtualisationInfrastructure"  
#*.mecHost*.mecPlatform.mecService[0].localPort = 10020

#*.mecHost1.mecPlatform.serviceRegistry.localAddress = "mecHost1.virtualisationInfrastructurem" 
#*.mecHost2.mecPlatform.serviceRegistry.localAddress = "mecHost2.virtualisationInfrastructure"  
#*.mecHost*.mecPlatform.serviceRegistry.localPort = 10021

*.mecHost*.mecPlatform.serviceRegistry.rng-0 = 0 # request service time
*.mecHost*.mecPlatform.serviceRegistry.rng-1 = 1 # subscription service time
*.mecHost*.mecPlatform.mecService[0].rng-0 = 0 # request service time
*.mecHost*.mecPlatform.mecService[0].rng-1 = 1 # subscription service time
*.mecHost*.mecPlatform.mecService[0].requestServiceTime = 4us
*.mecHost*.mecPlatform.mecService[0].subscriptionServiceTime = 11us




##########################################################
#                    App Layer                           #
##########################################################

#########################_Car Side_#######################
#------------UEWarningAlertApp---------------
*.car[*].numApps = 2
*.car[*].app[0].typename = "DeviceApp"
*.car[*].app[0].localPort = 4500
*.car[*].app[0].UALCMPAddress = "ualcmp"
*.car[*].app[0].UALCMPPort = 1000
*.car[*].app[0].appPackageSource = "ApplicationDescriptors/ResponseApp.json"

*.car[*].app[1].typename = "UERequestApp"
*.car[*].app[1].deviceAppAddress = "car["+string(ancestorIndex(1))+"]"
*.car[*].app[1].deviceAppPort = 4500
*.car[*].app[1].startTime = 1s
*.car[*].app[1].stopTime = 1800s

##########################################################
#                    Orchestrator                        #
##########################################################

[Config MecHostBased]
*.mecHost*.mecPlatformManager.mecOrchestrator = "mecOrchestrator"
*.mecOrchestrator.mecHostList = "mecHost1, mecHost2" 
*.mecOrchestrator.selectionPolicy = "MecHostBased"
*.mecOrchestrator.mecHostIndex = 1
*.mecOrchestrator.mecApplicationPackageList = "ResponseApp" 


[Config AvailableResourcesBased]
*.mecHost*.mecPlatformManager.mecOrchestrator = "mecOrchestrator"
*.mecOrchestrator.mecHostList = "mecHost1, mecHost2" 
*.mecOrchestrator.selectionPolicy = "AvailableResourcesBased"
*.mecOrchestrator.mecApplicationPackageList = "ResponseApp" 


